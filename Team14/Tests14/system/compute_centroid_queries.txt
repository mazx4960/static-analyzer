101 - select all variables
variable v;
Select v
flag, x, y, cenX, cenY, normSq, count
5000
102 - select all statements
stmt s;
Select s
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
5000
103 - select all procedures
procedure p;
Select p
main, readPoint, printResults, computeCentroid
5000
104 - select all constants
constant c;
Select c
0, 1
5000
105 - select all call statements
call c;
Select c
2, 3, 13, 18
5000
106 - select all while statements
while w;
Select w
14
5000
107 - select all if statements
if ifs;
Select ifs
19
5000
108 - select all assignment statements
assign a;
Select a
1, 10, 11, 12, 15, 16, 17, 20, 21, 22, 23
5000
109 - select all print statements
print p;
Select p
6, 7, 8, 9
5000
201 - select all statements that are nested in a WHILE loop
while w; stmt s;
Select s such that Parent(w, s)
15, 16, 17, 18
5000
202 - select all statements that have a parent
stmt s1, s2;
Select s2 such that Parent(s1, s2)
15, 16, 17, 18, 20, 21, 22
5000
203 - select all statements that have an IF statement as a parent
if ifs; stmt s;
Select s such that Parent(ifs, s)
20, 21, 22
5000
204 - select all statements following a WHILE statement directly
while w; stmt s;
Select s such that Follows(w, s)
19
5000
205 - select all statements after a WHILE statement directly or indirectly
while w; stmt s;
Select s such that Follows*(w, s)
19, 23
5000
206 - select all assign statements that are directly preceding an IF statement
assign a; if ifs;
Select a such that Follows(a, ifs)
none
5000
207 - select all assign statements that are directly or indirectly preceding an IF statement
assign a; if ifs;
Select a such that Follows*(a, ifs)
10, 11, 12
5000
301 - select all procedures that modifies variable "x"
procedure p;
Select p such that Modifies(p, "x")
main, readPoint, computeCentroid
5000
302 - select all procedures that modifies variable "cenX"
procedure p;
Select p such that Modifies(p, "cenX")
main, computeCentroid
5000
303 - select all while statements that modify "cenX"
while w;
Select w such that Modifies(w, "cenX")
14
5000
304 - select all while statements that modify "x"
while w;
Select w such that Modifies(w, "x")
14
5000
305 - select all if statements that modify "cenX"
if ifs;
Select ifs such that Modifies(ifs, "cenX")
19
5000
306 - select all if statements that modify "x"
if ifs;
Select ifs such that Modifies(ifs, "x")
none
5000
307 - select all assignment statements that modify any variables
stmt s;
Select s such that Modifies(s, _)
1, 2, 4, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
5000
401 - select all assignment statements using pattern
assign a;
Select a pattern a(_, _)
1, 10, 11, 12, 15, 16, 17, 20, 21, 22, 23
5000
402 - select all variables that uses "x" on the right side of assignment
assign a;
Select a pattern a(_, _"x"_)
16
5000
501 - select procedures that uses variable "x"
procedure p;
Select p such that Uses(p, "x")
main, computeCentroid
5000
502 - select all assignment statements that uses any variables on the right-hand side
stmt s;
Select s such that Uses(s, _)
2, 3, 6, 7, 8, 9, 14, 15, 16, 17, 19, 21, 22, 23
5000
503 - select all while statements that uses "cenY" on the right-hand side
while w;
Select w such that Uses(w, "cenY")
14
5000
504 - select all if statements that uses "cenY" on the right-hand side
if ifs;
Select ifs such that Uses(ifs, "cenY")
19
5000
505 - select while statements that uses "y"
while w;
Select w such that Uses(w, "y")
14
5000
506 - select all variables in assign statements that have "cenX" on the left of equals
variable v; assign a;
Select v such that Uses(a, v) pattern a("cenX", _)
cenX, x, count
5000
507 - select all variables that appear on both sides of the assignment
variable v; assign a;
Select v such that Uses(a,v) pattern a(v, _)
cenX, cenY, count
5000
508 - select all assigns with variables that appear on both sides of the assignment
variable v; assign a;
Select a such that Uses(a,v) pattern a(v, _)
15, 16, 17, 21, 22
5000
601 - select all procedures that calls some other procedure
procedure p, q;
Select p such that Calls(p, q)
main, computeCentroid
5000
602 - select all procedures that are called by some procedure
procedure p, q;
Select q such that Calls(p, q)
computeCentroid, readPoint, printResults
5000
603 - select all procedures that call procedure printResults
procedure p;
Select p such that Calls(p, "printResults")
main
5000
604 - select all procedures that call readPoint directly or indirectly
procedure p;
Select p such that Calls*(p, "readPoint")
main, computeCentroid
5000
605 - select all procedures that call main
procedure p;
Select p such that Calls(p, "main")
none
5000
606 - select all procedures that call main directly or indirectly
procedure p;
Select p such that Calls(p, "main")
none
5000
607 - select all procedures that call itself directly (none, since no recursion)
procedure p;
Select p such that Calls(p, p)
none
5000
608 - select all procedures that are called by main
procedure p;
Select p such that Calls("main", p)
computeCentroid, printResults
5000
609 - select all procedures that are called by main directly or indirectly
procedure p;
Select p such that Calls*("main", p)
computeCentroid, printResults, readPoint
5000
610 - select all procedures that are called by printResults
procedure p;
Select p such that Calls("printResults", p)
none
5000
611 - select all procedures with valid Calls relationship
procedure p;
Select p such that Calls("main", "computeCentroid")
main, readPoint, printResults, computeCentroid
5000
612 - select all procedures with valid Calls* relationship
procedure p;
Select p such that Calls*("main", "readPoint")
main, readPoint, printResults, computeCentroid
5000
613 - select all procedures with invalid Calls relationship
procedure p;
Select p such that Calls("computeCentroid", "main")
none
5000
614 - select all procedures with invalid Calls* relationship
procedure p;
Select p such that Calls*("readPoint", "main")
none
5000
615 - select all procedures, using wildcard
procedure p;
Select p such that Calls(_, _)
main, computeCentroid, readPoint, printResults
5000
616 - select all procedures that calls some other procedure, using wildcard
procedure p;
Select p such that Calls(p, _)
main, computeCentroid
5000
617 - select all procedures that are called by some procedure, using wildcard
procedure q;
Select q such that Calls(_, q)
computeCentroid, readPoint, printResults
5000
618 - select all procedures, using wildcard and non-related synonym
procedure p, q;
Select p such that Calls(q, _)
main, computeCentroid, readPoint, printResults
5000
619 - select all procedures that modifies "x", directly or indirectly, and are called on by another procedure
procedure p, q;
Select q such that Calls(p, q) such that Modifies(q, "x")
readPoint, computeCentroid
5000
701 - select all stmts that can be executed directly after some other stmt
stmt s1, s2;
Select s2 such that Next(s1, s2)
2, 3, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
5000
702 - select all stmts that have another stmt that can be executed directly after it
stmt s1, s2;
Select s1 such that Next(s1, s2)
1, 2, 4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22
5000
703 - select all stmts that can be executed directly or indirectly after some other stmt
stmt s1, s2;
Select s2 such that Next*(s1, s2)
2, 3, 5, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23
5000
704 - select all stmts that have another stmt that can be executed directly or indirectly after it
stmt s1, s2;
Select s1 such that Next*(s1, s2)
1, 2, 4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22
5000
705 - select all assign stmts that have another assign stmt directly after
assign a1, a2;
Select a1 such that Next(a1, a2)
10, 11, 15, 16, 20, 21, 22
5000
706 - select all WHILE blocks that have another WHILE block directly after
while w1, w2;
Select w1 such that Next(w1, w2)
none
5000
707 - select all IF blocks that have a WHILE block directly before
if ifs; while w;
Select ifs such that Next(w, ifs)
19
5000
708 - select all assign stmts that are directly before line 10 (none)
assign a;
Select a such that Next(a, 10)
none
5000
709 - select all stmts that are directly after another assign stmt that modifies "cenX"
stmt s; assign a;
Select s such that Next(a, s) pattern a ("cenX", _)
12, 17, 22
5000
710 - select all stmts that are directly or indirectly after stmt 17
stmt s;
Select s such that Next*(17, s)
14, 15, 16, 17, 18, 19, 20, 21, 22, 23
5000
711 - select all stmts that are directly or indirectly after stmt 20
stmt s;
Select s such that Next*(20, s)
23
5000
712 - select all assign stmts given valid Next relationship
assign a;
Select a such that Next(1, 2)
1, 10, 11, 12, 15, 16, 17, 20, 21, 22, 23
5000
713 - select all procedures given valid Next relationship
procedure p;
Select p such that Next(19, 21)
main, readPoint, printResults, computeCentroid
5000
714 - select all procedures given valid Next* relationship
procedure p;
Select p such that Next*(19, 23)
main, readPoint, printResults, computeCentroid
5000
715 - select all assign stmts with pattern given valid Next relationship
assign a;
Select a pattern a ("cenX", _) such that Next(1, 2)
11, 16, 21
5000
716 - select all assign stmts with specified pattern given valid Next relationship
assign a;
Select a such that Next(18, 14) pattern a (_, _"y"_)
17
5000
717 - select all call stmts given invalid Next relationship
call c;
Select c such that Next(1, 3)
none
5000
718 - select all while blocks given invalid Next relationship (stmts in Next must be in same procedure)
while w;
Select w such that Next(23, 6)
none
5000
719 - select all stmts given invalid Next relationship
stmt s;
Select s such that Next(s, s)
none
5000
720 - select all stmts given invalid Next* relationship
stmt s;
Select s such that Next*(s, s)
14, 15, 16, 17, 18
5000
721 - select all stmts given invalid Next relationship
stmt s;
Select s such that Next(1, 1)
none
5000
722 - select all stmts given invalid Next* relationship
stmt s;
Select s such that Next*(23, 23)
none
5000
723 - select all stmts given invalid Next relationship (line 24 non existent)
stmt s;
Select s such that Next*(23, 24)
none
5000
724 - select all read stmts that have another stmt executed directly after, using wildcard
read r;
Select r such that Next(r, _)
4
5000
725 - select all print stmt that are executed after another stmt, using wildcard
print p;
Select p such that Next(_, p)
7, 8, 9
5000
801 - select all assign stmts that Affects some other stmt
assign a1, a2;
Select a1 such that Affects(a1, a2)
10, 11, 12, 15, 16, 17, 21, 22
5000
802 - select all assign stmts that are affected by some other stmt
assign a1, a2;
Select a2 such that Affects(a1, a2)
15, 16, 17, 21, 22, 23
5000
803 - select all assign stmts that Affects some other stmt, using wildcard
assign a1;
Select a1 such that Affects(a1, _)
10, 11, 12, 15, 16, 17, 21, 22
5000
804 - select all assign stmts that are affected by some other stmt, using wildcard
assign a2;
Select a2 such that Affects(_, a2)
15, 16, 17, 21, 22, 23
5000
805 - select all read stmts with valid wildcard Affects relationship
read r;
Select r such that Affects(_, _)
4, 5
5000
806 - select all print stmts with valid Affects relationship
print p;
Select p such that Affects(11, 21)
6, 7, 8, 9
5000
807 - select all call stmts with valid Affects relationship
call c;
Select c such that Affects(15, 15)
2, 3, 13, 18
5000
808 - select all call stmts with valid Affects relationship
call c;
Select c such that Affects(16, 16)
2, 3, 13, 18
5000
809 - select all call stmts with valid Affects relationship
call c;
Select c such that Affects(17, 17)
2, 3, 13, 18
5000
810 - select all variables with invalid Affects relationship
variable v;
Select v such that Affects(20, 23)
none
5000
811 - select all variables with invalid Affects relationship
variable v;
Select v such that Affects(20, 21)
none
5000
812 - select all variables with invalid Affects relationship, line is not assign
variable v;
Select v such that Affects(13, 16)
none
5000
813 - select all variables with invalid Affects* relationship, line is not assign
variable v;
Select v such that Affects*(13, 23)
none
5000
814 - select all assign that Affect some other stmt using valid pattern
assign a1, a2;
Select a1 such that Affects(a1, a2) pattern a1 ("cenX", _)
11, 16, 21
5000
815 - select all stmts that Affect given stmt with valid pattern
assign a1, a2;
Select a1 such that Affects(a1, a2) pattern a2 ("normSq", _)
11, 12, 16, 17, 21, 22
5000
816 - select all procedures with valid Affects* relationship
procedure p;
Select p such that Affects*(10, 23)
main, readPoint, printResults, computeCentroid
5000
817 - select all stmts that Affects* given stmt with valid pattern
assign a1, a2;
Select a1 such that Affects*(a1, a2) pattern a2 ("normSq", _)
10, 11, 12, 15, 16, 17, 21, 22
5000
818 - select all assign stmts that Affects itself
assign a;
Select a such that Affects(a, a)
15, 16, 17
5000
819 - select all stmts that Affects itself (syn should be down-casted to assign)
stmt s;
Select s such that Affects(s, s)
15, 16, 17
5000
820 - select all assign stmts that Affects* itself
assign a;
Select a such that Affects*(a, a)
15, 16, 17
5000
821 - select all stmts that Affects* itself (syn should be down-casted to assign)
stmt s;
Select s such that Affects*(s, s)
15, 16, 17
5000
901 - select all pairs of reads and prints
read r; print p;
Select <r, p>
4 6, 4 7, 4 8, 4 9, 5 6, 5 7, 5 8, 5 9
5000
902 - select all statements contained in another
stmt s1, s2;
Select <s1, s2> such that Parent(s1, s2)
14 15, 14 16, 14 17, 14 18, 19 20, 19 21, 19 22
5000
903 - select statments separated by a call statement
stmt s1, s2; call c;
Select <s1, s2> such that Follows*(s1, c) and Follows*(c, s2)
1 3, 10 14, 10 19, 10 23, 11 14, 11 19, 11 23, 12 14, 12 19, 12 23
5000
904 - select every set of possible 2 consecutive statements
stmt s1, s2;
Select <s1, s2> such that Next(s1, s2)
1 2, 2 3, 4 5, 6 7, 7 8, 8 9, 10 11, 11 12, 12 13, 13 14, 14 15, 14 19, 15 16, 16 17, 17 18, 18 14, 19 20, 20 23, 19 21, 21 22, 22 23
5000
905 - select every tuple of variables with itself
variable v;
Select <v, v, v>
x x x, y y y, flag flag flag, cenX cenX cenX, cenY cenY cenY, normSq normSq normSq, count count count
5000
906 - select every assign statement with variables it uses and modifies
assign a; variable u, v;
Select <a, u, v> such that Modifies(a, u) and Uses(a, v)
15 count count, 16 cenX cenX, 16 cenX x, 17 cenY cenY, 17 cenY y, 21 cenX cenX, 21 cenX count, 22 cenY cenY, 22 cenY count, 23 normSq cenX, 23 normSq cenY
5000
907 - multi table test
stmt s1, s2, s3;
Select <s1, s3> such that Next*(s1, s2) and Next*(s2, s3) with s1.stmt# = 10 with s3.stmt# = 23
10 23
5000