@startuml

abstract class  "Parser" {
	parse()
}

abstract class  "Tokens" {}

abstract class  "Visitor" {
	preview()
}

abstract class  "Evaluator" {
	evaluate()
}

class UIInterface {
	inputSIMPLE()
	inputQuery()
	printResult()
}

class PKBInterface {
	List getAllEntity()
	List queryPKB(PKBQuery query)
}

class QPS {
	processQPL(String query)
	String getResult()
}

class QueryParser {
	Tokens parseQPL(String query)
	validateTokens(Tokens tokens)
}

class PQLTokeniser {
	Tokens tokenize(String query)
}

class PQLValidator {
	validateTokens(Tokens tokens)
}

class QueryEvaluator {
	List evaluate(Tokens tokens)
}

Evaluator <|.down. QueryEvaluator

Parser <|.down. QueryParser

Tokens <|.down. QueryTokens

QueryTokens <|.down. Select

Visitor <|.down. PQLVisitor
PQLVisitor <|.down. PQLValidator

UI -down- UIInterface
PKB -down- PKBInterface

QPS *-up- UIInterface
QPS *-up- PKBInterface
QPS *-down- QueryParser
QPS *-down- QueryEvaluator

QueryParser *-down- PQLTokeniser
QueryParser *-down- PQLValidator

PQLTokeniser *-down- QueryTokens

PQLValidator *-down- SyntaxValidator
PQLValidator *-down- SemanticsValidator

QueryEvaluator *-down- SubqueryEvaluator
QueryEvaluator *-down- ResultAggregator

SubqueryEvaluator <|.down. STEvaluator
SubqueryEvaluator <|.down. PatternEvaluator
SubqueryEvaluator -right- ResultAggregator

@enduml