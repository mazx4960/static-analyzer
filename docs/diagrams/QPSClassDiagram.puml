@startuml

abstract class  "Token" {
    TokenType type
    String value
}


class Query {
    SynonymReference[] getSynonymDeclarations()
    QueryCall getQueryCall()
    QueryClause[] getClauses()
    String toString()
}

abstract class "EvaluationStrategy" {
    EvaluationStrategy getStrategy()
    SubqueryResult evaluate()
    Entity[] getCandidates()
    Entity[] intersect()
}

interface UIInterface {
    void SetQueryString(String)
    Result ExecuteQuery()
}

interface PKBInterface {
    Entity[] getEntities(EntityType)
    Entity[] getByRelationship(RsType, Entity)
    Entity[] getEntitiesByString(String)
}

class QPS {
    void SetPKB()
	Result *EvaluateQuery()
}

class QueryParser {
	Query parse(Token[])
}

class QueryBuilder {
	Query build()
}

class Lexer {
	Token getNext()
    Token[] lex()
}

class QueryLexer {
	Token getNext()
}

class QueryEvaluator {
	Result evaluate()
}

class SubqueryEvaluator {
	SubqueryResult evaluate()
}

class SubqueryResult {
	SubqueryResult Join()
}

class ResultProjector {
    SubqueryResult Project()
}

UI -down- UIInterface
PKB -down- PKBInterface

QPS *-up- UIInterface
QPS *-up- PKBInterface
QPS *-down- QueryLexer
QPS *-down- QueryParser
QPS *-down- QueryEvaluator

QueryParser *-down- QueryBuilder
QueryParser *-down- Query

Lexer <|-down- QueryLexer

QueryLexer *-down- Token

QueryBuilder o-right- Query

QueryEvaluator *-down- SubqueryEvaluator
QueryEvaluator *-down- SubqueryResult
QueryEvaluator *-down- ResultProjector

SubqueryEvaluator <|-down- EvaluationStrategy
SubqueryEvaluator -right- SubqueryResult
SubqueryResult -right- ResultProjector
@enduml