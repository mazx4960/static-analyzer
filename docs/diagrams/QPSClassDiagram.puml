@startuml

abstract class  "Parser" {
}

abstract class  "Token" {}

abstract class  "Visitor" {
	preview()
}

abstract class  "Evaluator" {
}

abstract class "EvaluationStrategy" {
}

class UIInterface {
}

class PKBInterface {
}

class QPS {
	string[] process(String query)
}

class QueryParser {
	Token[] parse(String query)
	validateTokens(Token[] tokens)
}

class PQLTokeniser {
	Token[] tokenize(String query)
}

class QueryToken {
    bool validate(String tokenString)
}

class PQLValidator {
	bool validateToken(Token[] tokens)
}

class QueryEvaluator {
	string[] evaluate(Token[] tokens)
}

Evaluator <|.down. QueryEvaluator

Parser <|.down. QueryParser

Token <|.down. QueryToken

Visitor <|.down. PQLVisitor
PQLVisitor <|-down- PQLValidator

UI -down- UIInterface
PKB -down- PKBInterface

QPS *-up- UIInterface
QPS *-up- PKBInterface
QPS *-down- QueryParser
QPS *-down- QueryEvaluator

QueryParser *-down- PQLTokeniser
QueryParser *-down- PQLValidator

PQLTokeniser *-down- QueryToken
PQLTokeniser -down- SyntaxValidator

PQLValidator *-down- SyntaxValidator
PQLValidator *-down- SemanticsValidator

QueryEvaluator *-down- SubqueryEvaluator
QueryEvaluator *-down- ResultAggregator

EvaluationStrategy <|.down. SuchThatStrategy
EvaluationStrategy <|.down.PatternStrategy

SuchThatEvaluator *-down- SuchThatStrategy
PatternEvaluator *-down- PatternStrategy

SubqueryEvaluator <|-down- SuchThatEvaluator
SubqueryEvaluator <|-down- PatternEvaluator
SubqueryEvaluator -right- ResultAggregator

@enduml