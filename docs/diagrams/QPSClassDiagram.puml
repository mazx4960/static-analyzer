@startuml

abstract class  "Parser" {
	parse()
}

abstract class  "Token" {}

abstract class  "Visitor" {
	preview()
}

abstract class  "Evaluator" {
	evaluate()
}

class UIInterface {
	inputSIMPLE()
	inputQuery()
	printResult()
}

class PKBInterface {
	List query(Abstraction)
}

class QPS {
	Result processQPL(String)
	String getResult()
}

class QueryParser {
	Token[] parseQPL(String)
	bool validateTokens(Token[])
}

class PQLTokenizer {
	Token[] tokenize(String)
}

class PQLValidator {
	validateTokens(Token[])
}

class QueryEvaluator {
	List evaluate(Token[])
}

Evaluator <|.down. QueryEvaluator

Parser <|.down. QueryParser
Parser <|.down. SIMPLEParser

Token <|.down. SIMPLEToken
Token <|.down. QueryToken

QueryToken <|.down. UNKNOWN
QueryToken <|.down. Select

Visitor <|.down. PQLVisitor
PQLVisitor <|.down. PQLValidator

UI -down- UIInterface
PKB -down- PKBInterface

QPS *-up- UIInterface
QPS *-up- PKBInterface
QPS *-down- QueryParser
QPS *-down- QueryEvaluator

QueryParser *-down- PQLTokenizer
QueryParser *-down- PQLValidator

PQLTokenizer *-down- QueryToken

PQLValidator *-down- SyntaxValidator
PQLValidator *-down- SemanticsValidator

QueryEvaluator *-down- SubqueryEvaluator
QueryEvaluator *-down- ResultAggregator

SubqueryEvaluator <|.down. SuchThatEvaluator
SubqueryEvaluator <|.down. PatternEvaluator
SubqueryEvaluator -right- ResultAggregator

@enduml
