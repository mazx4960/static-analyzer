@startuml

class SP
class QPS
class PKB

abstract class IPKBPopulator {
	void populate(Abstraction)
}

abstract class IPKBQuerier {
	Results query(Query)
}

class EntityManager {
    void populate(Entity)
    Results query(Query)
}
class RelationshipManager {
    void populate(Relationship)
    Results query(Query)
}
class PatternManager {
    void populate(Pattern)
    Results query(Query)
}

class PKB {
    void populate(Abstraction)
    Results query(Query)
}

abstract class "SIMPLEAbstraction"
abstract class "SIMPLEEntity"
abstract class "QueryPattern"

class Variable {
	variableTable
}

class Read {
	readTable
}

class Print {
	printTable
}

class Call {
	callTable
}

class If {
	ifTable
}

class While {
	whileTable
}

class Constant {
	constantTable
}

class Procedure{
	procedureTable
}

class Assign {
	assignTable
}

class Pattern {
	patternTable
}

class Modifies {
	modifiesTable
}

class Follows {
	followsTable
}

class FollowsT {
	followsTable
}

class Uses {
	usesTable
}

class Parent{
	parentTable
}

class ParentT {
	parentTable
}


IPKBPopulator *-down- PKB
IPKBQuerier *-down- PKB
SP -down- IPKBPopulator
QPS -down- IPKBQuerier

PKB <|.down. EntityManager
PKB <|.down.  PatternManager
PKB <|.down.  RelationshipManager

Variable -up-* EntityManager
Read -up-* EntityManager
Print  -up-* EntityManager
Call -up-* EntityManager
If -up-* EntityManager
While -up-* EntityManager
Constant -up-* EntityManager
Procedure -up-* EntityManager
Assign -up-* EntityManager

Variable -down-|> SIMPLEEntity
Read -down-|> SIMPLEEntity
Print -down-|> SIMPLEEntity
Call -down-|> SIMPLEEntity
If -down-|> SIMPLEEntity
While -down-|> SIMPLEEntity
Constant -down-|> SIMPLEEntity
Procedure -down-|> SIMPLEEntity
Assign -down-|> SIMPLEEntity

Modifies -up-* RelationshipManager
Follows -up-* RelationshipManager
FollowsT -up-* RelationshipManager
Uses -up-* RelationshipManager
Parent -up-* RelationshipManager
ParentT -up-* RelationshipManager


Modifies -down-|> SIMPLEAbstraction
Follows -down-|> SIMPLEAbstraction
FollowsT -down-|> SIMPLEAbstraction
Uses -down-|> SIMPLEAbstraction
Parent -down-|> SIMPLEAbstraction
ParentT -down-|> SIMPLEAbstraction

Pattern -up-* PatternManager
Pattern -down-|> QueryPattern

@enduml