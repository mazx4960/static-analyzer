@startuml

class SP
class UI
class PKB

class UIInterface {
    string readSourceFile()
}

class Lexer {
    Token getNext()
    Token[] lex()
}

abstract class Token {
}
class Symbol
class Literal
class Keyword
class Operator
class Separator

class Parser
class SimpleGrammarRule

class SimpleAST
abstract class SimpleEntity
abstract class SimpleContainer
class SimpleProgram
class SimpleProcedure
class SimpleIf
class SimpleWhile
class SimpleCall
class SimpleAssign
class SimpleRead
class SimplePrint

class DesignExtractor {
    void extractDesign(SimpleAST)
}
abstract class Extractor {
    void extract(SimpleAST)
}
class EntityExtractor {
    void extract(SimpleAST)
}
class PatternExtractor {
    void extract(SimpleAST)
}
class RelationshipExtractor {
    void extract(SimpleAST)
}

class PKBInterface

SP *-left- UIInterface
SP *-left- PKBInterface
SP *-down- Lexer
SP *-down- Parser
SP *-right- DesignExtractor
PKBInterface -up- PKB
UIInterface -up- UI

Token <|.. Symbol
Token <|.. Literal
Token <|.. Keyword
Token <|.. Operator
Token <|.. Separator

Lexer o-- Token
Parser .left.> Lexer: getNext()
Parser -down-> SimpleGrammarRule : check()
Parser *-down-> SimpleAST
SimpleAST *-- SimpleProgram
SimpleContainer ..|> SimpleEntity
SimpleCall ..|> SimpleEntity
SimpleAssign ..|> SimpleEntity
SimpleRead ..|> SimpleEntity
SimplePrint ..|> SimpleEntity
SimpleIf ..|> SimpleContainer
SimpleWhile ..|> SimpleContainer
SimpleProcedure ..|> SimpleContainer
SimpleProgram ..|> SimpleContainer
SimpleContainer *-- SimpleEntity

Extractor <|.. EntityExtractor
Extractor <|.. PatternExtractor
Extractor <|.. RelationshipExtractor

DesignExtractor --> Extractor : extract()

@enduml

