@startuml

interface UI
interface IPKBPopulator

class SP {
    +void LoadSource()
}
class Lexer {
    +Token next_token()
    +Token*[] lex()
}
abstract class Token

class Parser {
    +Node* ParseProgram(Token*[])
    +void ValidateProgram(Node*)
}
class ProgramGrammarRule {
    +Node *parseNode(TokenIterator)
}

abstract class Extractor {
    +Design*[] ExtractAll(Node*)
}
class EntityExtractor
class PatternExtractor
class RelationshipExtractor

SP -up-> IPKBPopulator
SP <-up- UI: LoadSource

SP -down-> Lexer: lex
SP -down-> Parser: ParseProgram
SP -down-> Extractor: ExtractAll

Lexer o-- Token
Parser -down-> ProgramGrammarRule: parseNode()

Extractor <|.. EntityExtractor
Extractor <|.. PatternExtractor
Extractor <|.. RelationshipExtractor

@enduml

