@startuml

interface UI
interface IPKBPopulator

class SP {
    void LoadSource()
}
class Lexer {
    Token NextToken()
    Token[] Lex()
}
abstract class Token

class Parser {
    Node ParseProgram(Token[])
    void ValidateProgram(Node)
}
class ProgramGrammarRule {
    Node ParseNode(TokenIterator)
}

abstract class Extractor {
    Design[] ExtractAll(Node)
}
class EntityExtractor
class PatternExtractor
class RelationshipExtractor

SP -up-> IPKBPopulator
SP <-up- UI: LoadSource

SP -down-> Lexer: Lex
SP -down-> Parser: ParseProgram
SP -down-> Extractor: ExtractAll

Lexer o-- Token
Parser -down-> ProgramGrammarRule: ParseNode

Extractor <|-down- EntityExtractor
Extractor <|-down- PatternExtractor
Extractor <|-down- RelationshipExtractor

@enduml

