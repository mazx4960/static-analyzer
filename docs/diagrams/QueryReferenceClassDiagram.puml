@startuml



abstract QueryReference{
    ReferenceType getRefType()
    EntityPointerUnorderedSet getContext()
    void setContext(EntityPointerUnorderedSet)
    String getReferenceValue()
    String toString()
}

class WildcardReference {
}

class IdentReference {
}

class IntegerReference {
}

abstract ElemReference {
    virtual ReferenceType getRefType()
    virtual QuerySynonym getSynonym()
}

class AttrReference  {
    SynonymReference synonym_reference_;
    AttributeType attribute_type_;
    SynonymReference getSynonymReference()
    AttributeType getAttribute()
}

abstract SynonymReference {
    QuerySynonym query_synonym_
}

class StatementDeclaration  {
}

class IfDeclaration   {
}

class ReadDeclaration   {
}

class CallDeclaration   {
}

class PrintDeclaration   {
}

class WhileDeclaration   {
}

class AssignDeclaration   {
}

class VariableDeclaration    {
}

class ConstantDeclaration    {
}

class ProcedureDeclaration    {
}

class QuerySynonym{
    String synonym_
    String toString()
}

interface ICheckSyntax {
    bool isSyntacticallyCorrect()
}


ICheckSyntax <|.down. QueryReference

QueryReference <|-down- IdentReference
QueryReference <|-down- IntegerReference
QueryReference <|-down- SynonymReference
QueryReference <|-down- AttrReference
QueryReference <|-down- WildcardReference

ElemReference <|-down- SynonymReference
ElemReference <|-down- AttrReference


SynonymReference <|-down- StatementDeclaration
SynonymReference <|-down- IfDeclaration
SynonymReference <|-down- ReadDeclaration
SynonymReference <|-down- CallDeclaration
SynonymReference <|-down- PrintDeclaration
SynonymReference <|-down- WhileDeclaration
SynonymReference <|-down- AssignDeclaration
SynonymReference <|-down- VariableDeclaration
SynonymReference <|-down- ConstantDeclaration
SynonymReference <|-down- ProcedureDeclaration
SynonymReference o-right- QuerySynonym

AttrReference o-right- SynonymReference
AttrReference *-down- AttributeType
@enduml