<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentStyleType="text/css" height="1810.4167px" preserveAspectRatio="none" style="width:1277px;height:1810px;background:#FFFFFF;" version="1.1" viewBox="0 0 1277 1810" width="1277.0833px" zoomAndPan="magnify"><defs/><g><rect fill="#FFD1D3" height="1781.0445" rx="4.1667" ry="4.1667" style="stroke:#FFFFFF;stroke-width:1.0416666666666667;" width="1001.0417" x="77.6042" y="11.4583"/><text fill="#2196F3" font-family="&quot;Verdana&quot;" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="25" x="563.5417" y="33.96">QPS</text><rect fill="#FACAA0" height="1781.0445" rx="4.1667" ry="4.1667" style="stroke:#FFFFFF;stroke-width:1.0416666666666667;" width="95.8333" x="1164.0625" y="11.4583"/><text fill="#2196F3" font-family="&quot;Verdana&quot;" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="25" x="1197.3958" y="33.96">PKB</text><rect fill="#FFFFFF" height="1624.1943" style="stroke:#000000;stroke-width:1.0416666666666667;" width="10.4167" x="152.0833" y="155.8085"/><rect fill="#FFFFFF" height="128.772" style="stroke:#000000;stroke-width:1.0416666666666667;" width="10.4167" x="157.2917" y="215.507"/><rect fill="#FFFFFF" height="154.0955" style="stroke:#000000;stroke-width:1.0416666666666667;" width="10.4167" x="315.1042" y="402.9358"/><rect fill="#FFFFFF" height="359.5561" style="stroke:#000000;stroke-width:1.0416666666666667;" width="10.4167" x="486.9792" y="673.2564"/><rect fill="#FFFFFF" height="256.8258" style="stroke:#000000;stroke-width:1.0416666666666667;" width="10.4167" x="657.2917" y="1471.8119"/><rect fill="#FFFFFF" height="51.3652" style="stroke:#000000;stroke-width:1.0416666666666667;" width="10.4167" x="902.0833" y="1084.1777"/><rect fill="#FFFFFF" height="226.2472" style="stroke:#000000;stroke-width:1.0416666666666667;" width="10.4167" x="902.0833" y="1194.1996"/><rect fill="#FFFFFF" height="51.3652" style="stroke:#000000;stroke-width:1.0416666666666667;" width="10.4167" x="902.0833" y="1523.1771"/><rect fill="#FFFFFF" height="51.3652" style="stroke:#000000;stroke-width:1.0416666666666667;" width="10.4167" x="1021.875" y="1310.4248"/><rect fill="#FFFFFF" height="51.3652" style="stroke:#000000;stroke-width:1.0416666666666667;" width="10.4167" x="1021.875" y="1625.9074"/><rect fill="#FFFFFF" height="51.3652" style="stroke:#000000;stroke-width:1.0416666666666667;" width="10.4167" x="1206.7708" y="272.0805"/><rect fill="#FFFFFF" height="51.3652" style="stroke:#000000;stroke-width:1.0416666666666667;" width="10.4167" x="1206.7708" y="454.3009"/><rect fill="#FFFFFF" height="51.3652" style="stroke:#000000;stroke-width:1.0416666666666667;" width="10.4167" x="1206.7708" y="724.6216"/><rect fill="#FFFFFF" height="51.3652" style="stroke:#000000;stroke-width:1.0416666666666667;" width="10.4167" x="1206.7708" y="827.3519"/><rect fill="#FFFFFF" height="51.3652" style="stroke:#000000;stroke-width:1.0416666666666667;" width="10.4167" x="1206.7708" y="930.0822"/><rect fill="none" height="571.2199" rx="4.1667" ry="4.1667" style="stroke:#FF9800;stroke-width:1.8750000000000002;" width="1194.7917" x="71.3542" y="572.6563"/><rect fill="none" height="160.2987" rx="4.1667" ry="4.1667" style="stroke:#FF9800;stroke-width:1.8750000000000002;" width="246.875" x="838.0208" y="1209.8246"/><line style="stroke:#000000;stroke-width:1.0416666666666667;stroke-dasharray:5.0,5.0;" x1="156.7708" x2="156.7708" y1="102.36" y2="1798.7528"/><line style="stroke:#000000;stroke-width:1.0416666666666667;stroke-dasharray:5.0,5.0;" x1="320.3125" x2="320.3125" y1="102.36" y2="1798.7528"/><line style="stroke:#000000;stroke-width:1.0416666666666667;stroke-dasharray:5.0,5.0;" x1="492.1875" x2="492.1875" y1="102.36" y2="1798.7528"/><line style="stroke:#000000;stroke-width:1.0416666666666667;stroke-dasharray:5.0,5.0;" x1="661.9792" x2="661.9792" y1="102.36" y2="1798.7528"/><line style="stroke:#000000;stroke-width:1.0416666666666667;stroke-dasharray:5.0,5.0;" x1="906.7708" x2="906.7708" y1="102.36" y2="1798.7528"/><line style="stroke:#000000;stroke-width:1.0416666666666667;stroke-dasharray:5.0,5.0;" x1="1026.5625" x2="1026.5625" y1="102.36" y2="1798.7528"/><line style="stroke:#000000;stroke-width:1.0416666666666667;stroke-dasharray:5.0,5.0;" x1="1211.9792" x2="1211.9792" y1="102.36" y2="1798.7528"/><rect fill="#F97181" height="50.1383" rx="4.1667" ry="4.1667" style="stroke:#9D0012;stroke-width:1.0416666666666667;" width="130.2083" x="92.1875" y="51.18"/><text fill="#9D0012" font-family="&quot;Verdana&quot;" font-size="12.5" lengthAdjust="spacing" textLength="94.7917" x="109.8958" y="80.9733">:QueryEvaluator</text><rect fill="#F97181" height="50.1383" rx="4.1667" ry="4.1667" style="stroke:#9D0012;stroke-width:1.0416666666666667;" width="133.3333" x="253.6458" y="51.18"/><text fill="#9D0012" font-family="&quot;Verdana&quot;" font-size="12.5" lengthAdjust="spacing" textLength="97.9167" x="271.3542" y="80.9733">:QueryOptimiser</text><rect fill="#F97181" height="50.1383" rx="4.1667" ry="4.1667" style="stroke:#9D0012;stroke-width:1.0416666666666667;" width="147.9167" x="418.2292" y="51.18"/><text fill="#9D0012" font-family="&quot;Verdana&quot;" font-size="12.5" lengthAdjust="spacing" textLength="112.5" x="435.9375" y="80.9733">:EvaluationStrategy</text><rect fill="#F97181" height="50.1383" rx="4.1667" ry="4.1667" style="stroke:#9D0012;stroke-width:1.0416666666666667;" width="130.2083" x="597.3958" y="51.18"/><text fill="#9D0012" font-family="&quot;Verdana&quot;" font-size="12.5" lengthAdjust="spacing" textLength="94.7917" x="615.1042" y="80.9733">:ResultProjector</text><rect fill="#F97181" height="50.1383" rx="4.1667" ry="4.1667" style="stroke:#9D0012;stroke-width:1.0416666666666667;" width="96.875" x="858.8542" y="51.18"/><text fill="#9D0012" font-family="&quot;Verdana&quot;" font-size="12.5" lengthAdjust="spacing" textLength="61.4583" x="876.5625" y="80.9733">:Database</text><rect fill="#F97181" height="50.1383" rx="4.1667" ry="4.1667" style="stroke:#9D0012;stroke-width:1.0416666666666667;" width="73.9583" x="990.1042" y="51.18"/><text fill="#9D0012" font-family="&quot;Verdana&quot;" font-size="12.5" lengthAdjust="spacing" textLength="38.5417" x="1007.8125" y="80.9733">:Table</text><rect fill="#FFE374" height="50.1383" rx="4.1667" ry="4.1667" style="stroke:#A38300;stroke-width:1.0416666666666667;" width="66.6667" x="1178.6458" y="51.18"/><text fill="#A38300" font-family="&quot;Verdana&quot;" font-size="12.5" lengthAdjust="spacing" textLength="27.0833" x="1198.4375" y="80.9733">:PKB</text><rect fill="#FFFFFF" height="1624.1943" style="stroke:#000000;stroke-width:1.0416666666666667;" width="10.4167" x="152.0833" y="155.8085"/><rect fill="#FFFFFF" height="128.772" style="stroke:#000000;stroke-width:1.0416666666666667;" width="10.4167" x="157.2917" y="215.507"/><rect fill="#FFFFFF" height="154.0955" style="stroke:#000000;stroke-width:1.0416666666666667;" width="10.4167" x="315.1042" y="402.9358"/><rect fill="#FFFFFF" height="359.5561" style="stroke:#000000;stroke-width:1.0416666666666667;" width="10.4167" x="486.9792" y="673.2564"/><rect fill="#FFFFFF" height="256.8258" style="stroke:#000000;stroke-width:1.0416666666666667;" width="10.4167" x="657.2917" y="1471.8119"/><rect fill="#FFFFFF" height="51.3652" style="stroke:#000000;stroke-width:1.0416666666666667;" width="10.4167" x="902.0833" y="1084.1777"/><rect fill="#FFFFFF" height="226.2472" style="stroke:#000000;stroke-width:1.0416666666666667;" width="10.4167" x="902.0833" y="1194.1996"/><rect fill="#FFFFFF" height="51.3652" style="stroke:#000000;stroke-width:1.0416666666666667;" width="10.4167" x="902.0833" y="1523.1771"/><rect fill="#FFFFFF" height="51.3652" style="stroke:#000000;stroke-width:1.0416666666666667;" width="10.4167" x="1021.875" y="1310.4248"/><rect fill="#FFFFFF" height="51.3652" style="stroke:#000000;stroke-width:1.0416666666666667;" width="10.4167" x="1021.875" y="1625.9074"/><rect fill="#FFFFFF" height="51.3652" style="stroke:#000000;stroke-width:1.0416666666666667;" width="10.4167" x="1206.7708" y="272.0805"/><rect fill="#FFFFFF" height="51.3652" style="stroke:#000000;stroke-width:1.0416666666666667;" width="10.4167" x="1206.7708" y="454.3009"/><rect fill="#FFFFFF" height="51.3652" style="stroke:#000000;stroke-width:1.0416666666666667;" width="10.4167" x="1206.7708" y="724.6216"/><rect fill="#FFFFFF" height="51.3652" style="stroke:#000000;stroke-width:1.0416666666666667;" width="10.4167" x="1206.7708" y="827.3519"/><rect fill="#FFFFFF" height="51.3652" style="stroke:#000000;stroke-width:1.0416666666666667;" width="10.4167" x="1206.7708" y="930.0822"/><polygon fill="#000000" points="139.5833,151.6418,150,155.8085,139.5833,159.9752,143.75,155.8085" style="stroke:#000000;stroke-width:1.0416666666666667;"/><line style="stroke:#000000;stroke-width:1.1458333333333335;" x1="10.4167" x2="145.8333" y1="155.8085" y2="155.8085"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="13.5417" lengthAdjust="spacing" textLength="101.0417" x="30.7292" y="140.4521">Evaluate(Query)</text><line style="stroke:#000000;stroke-width:1.1458333333333335;" x1="162.5" x2="211.4583" y1="201.9653" y2="201.9653"/><line style="stroke:#000000;stroke-width:1.1458333333333335;" x1="211.4583" x2="211.4583" y1="201.9653" y2="215.507"/><line style="stroke:#000000;stroke-width:1.1458333333333335;" x1="168.75" x2="211.4583" y1="215.507" y2="215.507"/><polygon fill="#000000" points="179.1667,211.3403,168.75,215.507,179.1667,219.6737,175,215.507" style="stroke:#000000;stroke-width:1.0416666666666667;"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="13.5417" lengthAdjust="spacing" textLength="82.2917" x="185.4167" y="186.6089">InitContext()</text><polygon fill="#000000" points="1194.2708,267.9138,1204.6875,272.0805,1194.2708,276.2472,1198.4375,272.0805" style="stroke:#000000;stroke-width:1.0416666666666667;"/><line style="stroke:#000000;stroke-width:1.1458333333333335;" x1="167.7083" x2="1200.5208" y1="272.0805" y2="272.0805"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="13.5417" lengthAdjust="spacing" textLength="146.875" x="613.8021" y="256.724">getEntities(EntityType)</text><polygon fill="#000000" points="179.1667,319.279,168.75,323.4456,179.1667,327.6123,175,323.4456" style="stroke:#000000;stroke-width:1.0416666666666667;"/><line style="stroke:#000000;stroke-width:1.1458333333333335;stroke-dasharray:2.0,2.0;" x1="172.9167" x2="1210.9375" y1="323.4456" y2="323.4456"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="13.5417" lengthAdjust="spacing" textLength="45.8333" x="666.9271" y="308.0892">Entity[]</text><line style="stroke:#000000;stroke-width:1.1458333333333335;stroke-dasharray:2.0,2.0;" x1="167.7083" x2="211.4583" y1="343.2373" y2="343.2373"/><line style="stroke:#000000;stroke-width:1.1458333333333335;stroke-dasharray:2.0,2.0;" x1="211.4583" x2="211.4583" y1="343.2373" y2="356.779"/><line style="stroke:#000000;stroke-width:1.1458333333333335;stroke-dasharray:2.0,2.0;" x1="162.5" x2="211.4583" y1="356.779" y2="356.779"/><polygon fill="#000000" points="172.9167,352.6123,162.5,356.779,172.9167,360.9456,168.75,356.779" style="stroke:#000000;stroke-width:1.0416666666666667;"/><polygon fill="#000000" points="302.6042,398.7691,313.0208,402.9358,302.6042,407.1025,306.7708,402.9358" style="stroke:#000000;stroke-width:1.0416666666666667;"/><line style="stroke:#000000;stroke-width:1.1458333333333335;" x1="162.5" x2="308.8542" y1="402.9358" y2="402.9358"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="13.5417" lengthAdjust="spacing" textLength="106.25" x="185.6771" y="387.5793">Optimise(Query)</text><polygon fill="#000000" points="1194.2708,450.1343,1204.6875,454.3009,1194.2708,458.4676,1198.4375,454.3009" style="stroke:#000000;stroke-width:1.0416666666666667;"/><line style="stroke:#000000;stroke-width:1.1458333333333335;stroke-dasharray:2.0,2.0;" x1="325.5208" x2="1200.5208" y1="454.3009" y2="454.3009"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="13.5417" lengthAdjust="spacing" textLength="105.2083" x="713.5417" y="438.9445">getSimpleStats()</text><polygon fill="#000000" points="336.9792,501.4994,326.5625,505.6661,336.9792,509.8328,332.8125,505.6661" style="stroke:#000000;stroke-width:1.0416666666666667;"/><line style="stroke:#000000;stroke-width:1.1458333333333335;stroke-dasharray:2.0,2.0;" x1="330.7292" x2="1210.9375" y1="505.6661" y2="505.6661"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="13.5417" lengthAdjust="spacing" textLength="123.9583" x="706.7708" y="490.3097">&lt;EntityType, int&gt;[]</text><polygon fill="#000000" points="173.9583,552.8646,163.5417,557.0313,173.9583,561.1979,169.7917,557.0313" style="stroke:#000000;stroke-width:1.0416666666666667;"/><line style="stroke:#000000;stroke-width:1.1458333333333335;stroke-dasharray:2.0,2.0;" x1="167.7083" x2="319.2708" y1="557.0313" y2="557.0313"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="13.5417" lengthAdjust="spacing" textLength="38.5417" x="222.1354" y="541.6748">Query</text><path d="M75.5208,572.6563 L168.2292,572.6563 L168.2292,599.8779 L157.8125,610.2946 L71.3542,610.2946 L71.3542,576.8229 A4.1667,4.1667 0 0 1 75.5208,572.6563 " fill="#FF9800" fill-opacity="0.19608" style="stroke:#FF9800;stroke-width:1.0416666666666667;"/><rect fill="none" height="571.2199" rx="4.1667" ry="4.1667" style="stroke:#FF9800;stroke-width:1.8750000000000002;" width="1194.7917" x="71.3542" y="572.6563"/><text fill="#DF7800" font-family="&quot;Verdana&quot;" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="29.1667" x="97.3958" y="596.1995">loop</text><text fill="#DF7800" font-family="&quot;Verdana&quot;" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="175" x="194.2708" y="597.2412">[clause : subquery_clauses]</text><polygon fill="#000000" points="474.4792,669.0898,484.8958,673.2564,474.4792,677.4231,478.6458,673.2564" style="stroke:#000000;stroke-width:1.0416666666666667;"/><line style="stroke:#000000;stroke-width:1.1458333333333335;" x1="162.5" x2="480.7292" y1="673.2564" y2="673.2564"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="13.5417" lengthAdjust="spacing" textLength="144.7917" x="252.3438" y="657.9">evaluate(QueryClause)</text><polygon fill="#000000" points="1194.2708,720.4549,1204.6875,724.6216,1194.2708,728.7882,1198.4375,724.6216" style="stroke:#000000;stroke-width:1.0416666666666667;"/><line style="stroke:#000000;stroke-width:1.1458333333333335;" x1="497.3958" x2="1200.5208" y1="724.6216" y2="724.6216"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="13.5417" lengthAdjust="spacing" textLength="146.875" x="778.6458" y="709.2651">getEntities(EntityType)</text><polygon fill="#000000" points="508.8542,771.8201,498.4375,775.9867,508.8542,780.1534,504.6875,775.9867" style="stroke:#000000;stroke-width:1.0416666666666667;"/><line style="stroke:#000000;stroke-width:1.1458333333333335;stroke-dasharray:2.0,2.0;" x1="502.6042" x2="1210.9375" y1="775.9867" y2="775.9867"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="13.5417" lengthAdjust="spacing" textLength="45.8333" x="831.7708" y="760.6303">Entity[]</text><polygon fill="#000000" points="1194.2708,823.1852,1204.6875,827.3519,1194.2708,831.5186,1198.4375,827.3519" style="stroke:#000000;stroke-width:1.0416666666666667;"/><line style="stroke:#000000;stroke-width:1.1458333333333335;" x1="497.3958" x2="1200.5208" y1="827.3519" y2="827.3519"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="13.5417" lengthAdjust="spacing" textLength="217.7083" x="743.2292" y="811.9954">getByRelationship(RsType, Entity)</text><polygon fill="#000000" points="508.8542,874.5504,498.4375,878.717,508.8542,882.8837,504.6875,878.717" style="stroke:#000000;stroke-width:1.0416666666666667;"/><line style="stroke:#000000;stroke-width:1.1458333333333335;stroke-dasharray:2.0,2.0;" x1="502.6042" x2="1210.9375" y1="878.717" y2="878.717"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="13.5417" lengthAdjust="spacing" textLength="45.8333" x="831.7708" y="863.3606">Entity[]</text><polygon fill="#000000" points="1194.2708,925.9155,1204.6875,930.0822,1194.2708,934.2489,1198.4375,930.0822" style="stroke:#000000;stroke-width:1.0416666666666667;"/><line style="stroke:#000000;stroke-width:1.1458333333333335;" x1="497.3958" x2="1200.5208" y1="930.0822" y2="930.0822"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="13.5417" lengthAdjust="spacing" textLength="135.4167" x="784.375" y="914.7257">getByPattern(Pattern)</text><polygon fill="#000000" points="508.8542,977.2807,498.4375,981.4473,508.8542,985.614,504.6875,981.4473" style="stroke:#000000;stroke-width:1.0416666666666667;"/><line style="stroke:#000000;stroke-width:1.1458333333333335;stroke-dasharray:2.0,2.0;" x1="502.6042" x2="1210.9375" y1="981.4473" y2="981.4473"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="13.5417" lengthAdjust="spacing" textLength="45.8333" x="831.7708" y="966.0909">Entity[]</text><polygon fill="#000000" points="173.9583,1028.6458,163.5417,1032.8125,173.9583,1036.9792,169.7917,1032.8125" style="stroke:#000000;stroke-width:1.0416666666666667;"/><line style="stroke:#000000;stroke-width:1.1458333333333335;stroke-dasharray:2.0,2.0;" x1="167.7083" x2="491.1458" y1="1032.8125" y2="1032.8125"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="13.5417" lengthAdjust="spacing" textLength="35.4167" x="309.6354" y="1017.4561">Table</text><polygon fill="#000000" points="889.5833,1080.011,900,1084.1777,889.5833,1088.3443,893.75,1084.1777" style="stroke:#000000;stroke-width:1.0416666666666667;"/><line style="stroke:#000000;stroke-width:1.1458333333333335;" x1="162.5" x2="895.8333" y1="1084.1777" y2="1084.1777"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="13.5417" lengthAdjust="spacing" textLength="105.2083" x="479.6875" y="1068.8212">AddTable(Table)</text><polygon fill="#000000" points="173.9583,1131.3761,163.5417,1135.5428,173.9583,1139.7095,169.7917,1135.5428" style="stroke:#000000;stroke-width:1.0416666666666667;"/><line style="stroke:#000000;stroke-width:1.1458333333333335;stroke-dasharray:2.0,2.0;" x1="167.7083" x2="906.25" y1="1135.5428" y2="1135.5428"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="13.5417" lengthAdjust="spacing" textLength="28.125" x="520.8333" y="1120.1864">void</text><polygon fill="#000000" points="889.5833,1190.033,900,1194.1996,889.5833,1198.3663,893.75,1194.1996" style="stroke:#000000;stroke-width:1.0416666666666667;"/><line style="stroke:#000000;stroke-width:1.1458333333333335;" x1="162.5" x2="895.8333" y1="1194.1996" y2="1194.1996"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="13.5417" lengthAdjust="spacing" textLength="90.625" x="486.9792" y="1178.8432">MergeTables()</text><path d="M842.1875,1209.8246 L934.8958,1209.8246 L934.8958,1237.0463 L924.4792,1247.463 L838.0208,1247.463 L838.0208,1213.9913 A4.1667,4.1667 0 0 1 842.1875,1209.8246 " fill="#FF9800" fill-opacity="0.19608" style="stroke:#FF9800;stroke-width:1.0416666666666667;"/><rect fill="none" height="160.2987" rx="4.1667" ry="4.1667" style="stroke:#FF9800;stroke-width:1.8750000000000002;" width="246.875" x="838.0208" y="1209.8246"/><text fill="#DF7800" font-family="&quot;Verdana&quot;" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="29.1667" x="864.0625" y="1233.3679">loop</text><text fill="#DF7800" font-family="&quot;Verdana&quot;" font-size="12.5" font-weight="bold" lengthAdjust="spacing" textLength="73.9583" x="960.9375" y="1234.4096">[each table]</text><polygon fill="#000000" points="1009.375,1306.2581,1019.7917,1310.4248,1009.375,1314.5915,1013.5417,1310.4248" style="stroke:#000000;stroke-width:1.0416666666666667;"/><line style="stroke:#000000;stroke-width:1.1458333333333335;" x1="912.5" x2="1015.625" y1="1310.4248" y2="1310.4248"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="13.5417" lengthAdjust="spacing" textLength="68.75" x="932.8125" y="1295.0684">Join(Table)</text><polygon fill="#000000" points="923.9583,1357.6233,913.5417,1361.79,923.9583,1365.9566,919.7917,1361.79" style="stroke:#000000;stroke-width:1.0416666666666667;"/><line style="stroke:#000000;stroke-width:1.1458333333333335;stroke-dasharray:2.0,2.0;" x1="917.7083" x2="1026.0417" y1="1361.79" y2="1361.79"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="13.5417" lengthAdjust="spacing" textLength="35.4167" x="952.0833" y="1346.4335">Table</text><polygon fill="#000000" points="173.9583,1416.2801,163.5417,1420.4468,173.9583,1424.6134,169.7917,1420.4468" style="stroke:#000000;stroke-width:1.0416666666666667;"/><line style="stroke:#000000;stroke-width:1.1458333333333335;stroke-dasharray:2.0,2.0;" x1="167.7083" x2="906.25" y1="1420.4468" y2="1420.4468"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="13.5417" lengthAdjust="spacing" textLength="28.125" x="520.8333" y="1405.0903">void</text><polygon fill="#000000" points="644.7917,1467.6453,655.2083,1471.8119,644.7917,1475.9786,648.9583,1471.8119" style="stroke:#000000;stroke-width:1.0416666666666667;"/><line style="stroke:#000000;stroke-width:1.1458333333333335;" x1="162.5" x2="651.0417" y1="1471.8119" y2="1471.8119"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="13.5417" lengthAdjust="spacing" textLength="53.125" x="383.3333" y="1456.4555">Project()</text><polygon fill="#000000" points="889.5833,1519.0104,900,1523.1771,889.5833,1527.3438,893.75,1523.1771" style="stroke:#000000;stroke-width:1.0416666666666667;"/><line style="stroke:#000000;stroke-width:1.1458333333333335;" x1="667.7083" x2="895.8333" y1="1523.1771" y2="1523.1771"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="13.5417" lengthAdjust="spacing" textLength="193.75" x="688.0208" y="1507.8206">GetTable(selected_synonyms)</text><polygon fill="#000000" points="679.1667,1570.3756,668.75,1574.5422,679.1667,1578.7089,675,1574.5422" style="stroke:#000000;stroke-width:1.0416666666666667;"/><line style="stroke:#000000;stroke-width:1.1458333333333335;stroke-dasharray:2.0,2.0;" x1="672.9167" x2="906.25" y1="1574.5422" y2="1574.5422"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="13.5417" lengthAdjust="spacing" textLength="35.4167" x="769.7917" y="1559.1858">Table</text><polygon fill="#000000" points="1009.375,1621.7407,1019.7917,1625.9074,1009.375,1630.0741,1013.5417,1625.9074" style="stroke:#000000;stroke-width:1.0416666666666667;"/><line style="stroke:#000000;stroke-width:1.1458333333333335;" x1="667.7083" x2="1015.625" y1="1625.9074" y2="1625.9074"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="13.5417" lengthAdjust="spacing" textLength="64.5833" x="812.5" y="1610.5509">GetRows()</text><polygon fill="#000000" points="679.1667,1673.1059,668.75,1677.2725,679.1667,1681.4392,675,1677.2725" style="stroke:#000000;stroke-width:1.0416666666666667;"/><line style="stroke:#000000;stroke-width:1.1458333333333335;stroke-dasharray:2.0,2.0;" x1="672.9167" x2="1026.0417" y1="1677.2725" y2="1677.2725"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="13.5417" lengthAdjust="spacing" textLength="76.0417" x="809.375" y="1661.9161">ResultRow[]</text><polygon fill="#000000" points="173.9583,1724.471,163.5417,1728.6377,173.9583,1732.8044,169.7917,1728.6377" style="stroke:#000000;stroke-width:1.0416666666666667;"/><line style="stroke:#000000;stroke-width:1.1458333333333335;stroke-dasharray:2.0,2.0;" x1="167.7083" x2="661.4583" y1="1728.6377" y2="1728.6377"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="13.5417" lengthAdjust="spacing" textLength="40.625" x="392.1875" y="1713.2813">Result</text><polygon fill="#000000" points="21.875,1775.8362,11.4583,1780.0028,21.875,1784.1695,17.7083,1780.0028" style="stroke:#000000;stroke-width:1.0416666666666667;"/><line style="stroke:#000000;stroke-width:1.1458333333333335;stroke-dasharray:2.0,2.0;" x1="15.625" x2="156.25" y1="1780.0028" y2="1780.0028"/><text fill="#222222" font-family="&quot;Verdana&quot;" font-size="13.5417" lengthAdjust="spacing" textLength="40.625" x="63.5417" y="1764.6464">Result</text><!--MD5=[ade9068413576a99b26fdd9f0663b24a]
@startuml
!include Style.puml
!include SequenceStyle.puml

box QPS QPS_COLOR_LIGHT
participant ":QueryEvaluator" as QueryEvaluator<<QPS>>
participant ":QueryOptimiser" as QueryOptimiser<<QPS>>
participant ":EvaluationStrategy" as EvaluationStrategy<<QPS>>
participant ":ResultProjector" as ResultProjector<<QPS>>
participant ":Database" as Database<<QPS>>
participant ":Table" as Table<<QPS>>
end box

box PKB PKB_COLOR_LIGHT
participant ":PKB" as PKB<<PKB>>
end box

[-> QueryEvaluator : Evaluate(Query)
activate QueryEvaluator
QueryEvaluator -> QueryEvaluator : InitContext()
activate QueryEvaluator
QueryEvaluator -> PKB : getEntities(EntityType)
activate PKB
PKB - -> QueryEvaluator : Entity[]
deactivate PKB
QueryEvaluator - -> QueryEvaluator
deactivate QueryEvaluator

QueryEvaluator -> QueryOptimiser : Optimise(Query)
activate QueryOptimiser
QueryOptimiser - -> PKB : getSimpleStats()
activate PKB
PKB - -> QueryOptimiser : <EntityType, int>[]
deactivate PKB
QueryOptimiser - -> QueryEvaluator : Query
deactivate QueryOptimiser

loop clause : subquery_clauses
    QueryEvaluator -> EvaluationStrategy : evaluate(QueryClause)
    activate EvaluationStrategy
    EvaluationStrategy -> PKB : getEntities(EntityType)
    activate PKB
    PKB - -> EvaluationStrategy : Entity[]
    deactivate PKB
    EvaluationStrategy -> PKB : getByRelationship(RsType, Entity)
    activate PKB
    PKB - -> EvaluationStrategy : Entity[]
    deactivate PKB
    EvaluationStrategy -> PKB : getByPattern(Pattern)
    activate PKB
    PKB - -> EvaluationStrategy : Entity[]
    deactivate PKB
    EvaluationStrategy - -> QueryEvaluator : Table
    deactivate EvaluationStrategy
    QueryEvaluator -> Database : AddTable(Table)
    activate Database
    Database - -> QueryEvaluator : void
    deactivate Database
end
QueryEvaluator -> Database : MergeTables()
activate Database
loop each table
    Database -> Table : Join(Table)
    activate Table
    Table - -> Database : Table
    deactivate Table
end
Database - -> QueryEvaluator : void
deactivate Database

QueryEvaluator -> ResultProjector : Project()
activate ResultProjector
ResultProjector -> Database : GetTable(selected_synonyms)
activate Database
Database - -> ResultProjector : Table
deactivate Database

ResultProjector -> Table : GetRows()
activate Table
Table - -> ResultProjector : ResultRow[]
deactivate Table

ResultProjector - -> QueryEvaluator : Result
deactivate ResultProjector

[<- - QueryEvaluator : Result
deactivate QueryEvaluator

@enduml

@startuml




skinparam backgroundColor transparent
skinparam useBetaStyle false






<style>
  root {
    BackgroundColor transparent
    FontColor #2196F3
    HyperLinkColor #fd7e14
    LineColor #1a78c2
    LineThickness 1
    Margin 10
    Padding 6
    Shadowing 0.0
  }
  node {
   Padding 15
   roundcorner 20
   BackgroundColor transparent
  }
  caption {
    LineThickness 0
  }
  footer {
    LineThickness 0
  }
  groupHeader {
    BackgroundColor #fff
    FontColor #9C27B0
    FontStyle bold
  }
  header {
    LineThickness 0
  }
  referenceHeader {
    BackgroundColor transparent
    FontColor #222
    FontStyle bold
  }
  separator {
    BackgroundColor #222
    FontColor transparent
    FontStyle bold
  }
  title {
	FontSize 20
	BorderRoundCorner            8
	BorderThickness 	         1
	BackgroundColor  transparent
	FontColor #2196F3
	BorderColor #fff
  }
  nwdiagDiagram {
	network {
			FontColor #2196F3
	BorderColor #2196F3
	BackgroundColor transparent    
		LineColor #2196F3
		LineThickness 1.0
		FontColor #1a78c2
	}
	server {
			FontColor #2196F3
	BorderColor #2196F3
	BackgroundColor transparent
	}
	arrow {
		FontColor #1a78c2
		LineColor #1a78c2
	}
	group {
		BackGroundColor #fff
		LineColor $LIGHT_DARK
		LineThickness 2.0
		Margin 5
		Padding 5
	}
  }
  ganttDiagram {
	task {
			FontColor #2196F3
	BorderColor #2196F3
	BackgroundColor transparent
		LineColor #2196F3
		Margin 10
		Padding 6
	}
	note {
		FontColor #9C27B0
		LineColor #7D1F8D
		BackGroundColor transparent
	}
	separator {
		LineColor #cccccc
		BackGroundColor transparent
		FontColor #cccccc
	}
	milestone {
		FontColor #9C27B0
		FontSize 16
		FontStyle italic
		BackGroundColor #fff
		LineColor #cccccc
	}
	timeline {
		BackgroundColor #fff
		FontColor #cccccc
	}
	closed {
		BackgroundColor #CC7A00
		FontColor #ff9800
	}
  }
</style>
skinparam defaultFontName       "Verdana"
skinparam defaultFontSize       12
skinparam dpi                   100
skinparam shadowing             true
skinparam roundcorner           8
skinparam ParticipantPadding    40
skinparam BoxPadding            40
skinparam Padding               10 
skinparam TitleFontColor	    #222
skinparam TitleFontSize	    	20
skinparam TitleBorderThickness 	0
skinparam ArrowColor            #666
skinparam stereotype {
    CBackgroundColor #fff
    CBorderColor #cccccc
    ABackgroundColor #70bf73
    ABorderColor #3D8C40
    IBackgroundColor #B7161C
    IBorderColor $DANGER_DARK
    EBackgroundColor #ffad33
    EBorderColor #CC7A00
    NBackgroundColor #b052c0
    NBorderColor #7D1F8D
}
skinparam title {
	FontColor	                 #2196F3
	BorderColor	                 #cccccc
	FontSize	    	         20
	BorderRoundCorner            8
	BorderThickness 	         1
	BackgroundColor              transparent
}

skinparam legend {
	BackgroundColor transparent
	BorderColor #cccccc
	FontColor #222
}

skinparam swimlane {
	BorderColor #9C27B0
	BorderThickness 2
	TitleBackgroundColor  #fff-#fff
	TitleFontColor #2196F3
}


skinparam activity {
		FontColor #2196F3
	BorderColor #2196F3
	BackgroundColor transparent
	BarColor #4CAF50
	StartColor #9C27B0
	EndColor #9C27B0
	DiamondBackgroundColor transparent
  	DiamondBorderColor #cccccc
	DiamondFontColor #cccccc
}


skinparam participant {
		FontColor #2196F3
	BorderColor #2196F3
	BackgroundColor transparent
	ParticipantBorderThickness 2
}


skinparam actor {
		FontColor #2196F3
	BorderColor #2196F3
	BackgroundColor transparent
}


skinparam arrow {
	Thickness 3
	Color #2196F3
	FontColor #222
}


skinparam sequence {
	BorderColor #2196F3
	TitleFontColor #2196F3
	BackgroundColor transparent
	StartColor #2196F3
	EndColor #2196F3
	BoxBackgroundColor transparent
	BoxBorderColor #666
	BoxFontColor #222
	DelayFontColor #222
	LifeLineBorderColor #cccccc
	LifeLineBorderThickness 2
	LifeLineBackgroundColor transparent
	GroupBorderColor #666
	GroupFontColor #222
	GroupHeaderFontColor #9C27B0
	DividerBackgroundColor transparent
    DividerBorderColor #666
    DividerBorderThickness 2
    DividerFontColor #222
	ReferenceBackgroundColor transparent
	ReferenceBorderColor #666
	ReferenceFontColor #222
	ReferenceHeaderFontColor #9C27B0
	StereotypeFontColor #2196F3
}


skinparam partition {
	BorderColor #2196F3
	FontColor #2196F3
	BackgroundColor transparent
}


skinparam collections {
		FontColor #2196F3
	BorderColor #2196F3
	BackgroundColor transparent
}


skinparam control {
		FontColor #2196F3
	BorderColor #2196F3
	BackgroundColor transparent
}


skinparam entity {
		FontColor #2196F3
	BorderColor #2196F3
	BackgroundColor transparent
}


skinparam boundary {
		FontColor #2196F3
	BorderColor #2196F3
	BackgroundColor transparent
}


skinparam agent {
	BackgroundColor transparent
	BorderColor #999999
	FontColor #333333
}


skinparam note {
	BorderThickness 1
	BackgroundColor transparent
	BorderColor #9C27B0
	FontColor #9C27B0
}


skinparam artifact {
	BackgroundColor transparent
	BorderColor #666
	FontColor #666
}


skinparam component {
		FontColor #2196F3
	BorderColor #2196F3
	BackgroundColor transparent
}


skinparam interface {
	BackgroundColor  transparent
	BorderColor  #e51c23
	FontColor #222
}


skinparam storage {
	BackgroundColor transparent
  	BorderColor #ff9800
	FontColor #ff9800
}


skinparam node {
	BackgroundColor transparent
	BorderColor #222
	FontColor #222
}


skinparam cloud {
	BackgroundColor #F2FCFE-#eeeeee
	BorderColor #F2FCFE
	FontColor #222
}


skinparam database {
		FontColor #2196F3
	BorderColor #2196F3
	BackgroundColor transparent
}


skinparam class {
		FontColor #2196F3
	BorderColor #2196F3
	BackgroundColor transparent
	FontColor #fff
	HeaderBackgroundColor #2196F3-#1a78c2
	StereotypeFontColor #222
	BorderThickness 1
	AttributeFontColor #222
	AttributeFontSize 11
}


skinparam object {
		FontColor #2196F3
	BorderColor #2196F3
	BackgroundColor transparent
	StereotypeFontColor #222
	BorderThickness 1
	AttributeFontColor #cccccc
	AttributeFontSize 11
}


skinparam usecase {
		FontColor #2196F3
	BorderColor #2196F3
	BackgroundColor transparent
	BorderThickness 2
	StereotypeFontColor #2196F3
}


skinparam rectangle {
		FontColor #2196F3
	BorderColor #2196F3
	BackgroundColor transparent
	BorderThickness 2
	StereotypeFontColor #2196F3
}


skinparam package {
	BackgroundColor transparent
  	BorderColor #2196F3
	FontColor #2196F3
	BorderThickness 2
}


skinparam folder {
	BackgroundColor transparent
  	BorderColor #ff9800
	FontColor #ff9800
	BorderThickness 2
}


skinparam frame {
	BackgroundColor transparent
  	BorderColor #9C27B0
	FontColor #9C27B0
	BorderThickness 2
}


skinparam state {
		FontColor #2196F3
	BorderColor #2196F3
	BackgroundColor transparent
	StartColor #9C27B0
	EndColor #9C27B0
	AttributeFontColor #cccccc
	AttributeFontSize 11
}


skinparam queue {
		FontColor #2196F3
	BorderColor #2196F3
	BackgroundColor transparent
}


skinparam card {
	BackgroundColor transparent
	BorderColor #9C27B0
	FontColor #9C27B0
}


skinparam file {
	BackgroundColor transparent
	BorderColor #666
	FontColor #666

}


skinparam stack {
		FontColor #2196F3
	BorderColor #2196F3
	BackgroundColor transparent
}







skinparam BackgroundColor #FFFFFFF

skinparam Arrow {
    Color #000000
    FontSize 13
    Thickness 1.1
}



    skinparam Class {
        FontColor<<Hidden>> #FFFFFF
        StereotypeFontColor<<Hidden>> #FFFFFF
        BorderColor<<Hidden>> #FFFFFF
    }
    hide <<Hidden>> stereotype
    skinparam Class {
        FontColor<<SP>> #3333C4
        StereotypeFontColor<<SP>> #3333C4
        BorderColor<<SP>> #3333C4
    }
    hide <<SP>> stereotype
    skinparam Class {
        FontColor<<UI>> #1D8900
        StereotypeFontColor<<UI>> #1D8900
        BorderColor<<UI>> #1D8900
    }
    hide <<UI>> stereotype
    skinparam Class {
        FontColor<<QPS>> #9D0012
        StereotypeFontColor<<QPS>> #9D0012
        BorderColor<<QPS>> #9D0012
    }
    hide <<QPS>> stereotype
    skinparam Class {
        FontColor<<PKB>> #A38300
        StereotypeFontColor<<PKB>> #A38300
        BorderColor<<PKB>> #A38300
    }
    hide <<PKB>> stereotype
skinparam Class {
    FontName Arial
    FontSize 15
    StereotypeFontSize 13
    BorderThickness 1.1
}

    skinparam Package {
        FontColor<<SP>> #3333C4
        StereotypeFontColor<<SP>> #3333C4
        BorderColor<<SP>> #3333C4
    }
    hide <<SP>> stereotype
    skinparam Package {
        FontColor<<UI>> #1D8900
        StereotypeFontColor<<UI>> #1D8900
        BorderColor<<UI>> #1D8900
    }
    hide <<UI>> stereotype
    skinparam Package {
        FontColor<<QPS>> #9D0012
        StereotypeFontColor<<QPS>> #9D0012
        BorderColor<<QPS>> #9D0012
    }
    hide <<QPS>> stereotype
    skinparam Package {
        FontColor<<PKB>> #A38300
        StereotypeFontColor<<PKB>> #A38300
        BorderColor<<PKB>> #A38300
    }
    hide <<PKB>> stereotype
skinparam Package {
    Style Rectangle
}

SKINPARAM MINCLASSWIDTH 50
SKINPARAM SHADOWING FALSE
SKINPARAM DEFAULTTEXTALIGNMENT CENTER
SKINPARAM TITLEFONTSIZE 25

SKINPARAM TITLEFONTCOLOR<<SP>> #3333C4
SKINPARAM TITLEFONTCOLOR<<UI>>    #1D8900
SKINPARAM TITLEFONTCOLOR<<QPS>> #9D0012
SKINPARAM TITLEFONTCOLOR<<PKB>> #A38300


hide footbox
hide members
hide circle
skinparam Actor {
    BorderColor #000000
    Color #000000
    FontName Arial
}

skinparam Sequence {
    MessageAlign center

    BoxFontSize 15
    BoxPadding 0
    BoxFontColor #FFFFFF
    BoxBorderColor #FFFFFF

    GroupFontColor #DF7800
    GroupBackgroundColor #FF980032
    GroupBorderColor #FF9800
    GroupBorderThickness 1.8
    GroupHeaderFontColor #DF7800
    GroupHeaderFontStyle bold

    ReferenceFontColor #DF7800
    ReferenceBackgroundColor #FF9C0532
    ReferenceHeaderBackgroundColor #FF980032
    ReferenceBorderColor #FF9800
    ReferenceBorderThickness 1.8
    ReferenceHeaderFontColor #DF7800
    ReferenceHeaderFontColor #DF7800
    ReferenceHeaderFontStyle bold

    LifelineBackgroundColor #FFFFFF
    LifelineBorderColor #000000
}

skinparam Participant {
    FontColor #FFFFFFF
    Padding 10
    BorderColor #000000
}


    skinparam Participant {
        FontColor<<SP>> #3333C4
        BorderColor<<SP>> #3333C4
        BackgroundColor<<SP>> #C8C8FA
    }
    skinparam Participant {
        FontColor<<UI>> #1D8900
        BorderColor<<UI>> #1D8900
        BackgroundColor<<UI>> #BDECB1
    }
    skinparam Participant {
        FontColor<<QPS>> #9D0012
        BorderColor<<QPS>> #9D0012
        BackgroundColor<<QPS>> #F97181
    }
    skinparam Participant {
        FontColor<<PKB>> #A38300
        BorderColor<<PKB>> #A38300
        BackgroundColor<<PKB>> #FFE374
    }

box QPS #FFD1D3
participant ":QueryEvaluator" as QueryEvaluator<<QPS>>
participant ":QueryOptimiser" as QueryOptimiser<<QPS>>
participant ":EvaluationStrategy" as EvaluationStrategy<<QPS>>
participant ":ResultProjector" as ResultProjector<<QPS>>
participant ":Database" as Database<<QPS>>
participant ":Table" as Table<<QPS>>
end box

box PKB #FACAA0
participant ":PKB" as PKB<<PKB>>
end box

[-> QueryEvaluator : Evaluate(Query)
activate QueryEvaluator
QueryEvaluator -> QueryEvaluator : InitContext()
activate QueryEvaluator
QueryEvaluator -> PKB : getEntities(EntityType)
activate PKB
PKB - -> QueryEvaluator : Entity[]
deactivate PKB
QueryEvaluator - -> QueryEvaluator
deactivate QueryEvaluator

QueryEvaluator -> QueryOptimiser : Optimise(Query)
activate QueryOptimiser
QueryOptimiser - -> PKB : getSimpleStats()
activate PKB
PKB - -> QueryOptimiser : <EntityType, int>[]
deactivate PKB
QueryOptimiser - -> QueryEvaluator : Query
deactivate QueryOptimiser

loop clause : subquery_clauses
    QueryEvaluator -> EvaluationStrategy : evaluate(QueryClause)
    activate EvaluationStrategy
    EvaluationStrategy -> PKB : getEntities(EntityType)
    activate PKB
    PKB - -> EvaluationStrategy : Entity[]
    deactivate PKB
    EvaluationStrategy -> PKB : getByRelationship(RsType, Entity)
    activate PKB
    PKB - -> EvaluationStrategy : Entity[]
    deactivate PKB
    EvaluationStrategy -> PKB : getByPattern(Pattern)
    activate PKB
    PKB - -> EvaluationStrategy : Entity[]
    deactivate PKB
    EvaluationStrategy - -> QueryEvaluator : Table
    deactivate EvaluationStrategy
    QueryEvaluator -> Database : AddTable(Table)
    activate Database
    Database - -> QueryEvaluator : void
    deactivate Database
end
QueryEvaluator -> Database : MergeTables()
activate Database
loop each table
    Database -> Table : Join(Table)
    activate Table
    Table - -> Database : Table
    deactivate Table
end
Database - -> QueryEvaluator : void
deactivate Database

QueryEvaluator -> ResultProjector : Project()
activate ResultProjector
ResultProjector -> Database : GetTable(selected_synonyms)
activate Database
Database - -> ResultProjector : Table
deactivate Database

ResultProjector -> Table : GetRows()
activate Table
Table - -> ResultProjector : ResultRow[]
deactivate Table

ResultProjector - -> QueryEvaluator : Result
deactivate ResultProjector

[<- - QueryEvaluator : Result
deactivate QueryEvaluator

@enduml

PlantUML version 1.2022.12(Mon Oct 24 02:12:26 SGT 2022)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Default Encoding: US-ASCII
Language: en
Country: SG
--></g></svg>